<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="vrt__string_8h" kind="file" language="C++">
    <compoundname>vrt_string.h</compoundname>
    <includes refid="vrt__types_8h" local="no">vrt/vrt_types.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>/home/emil/libvrt/include/vrt/vrt_string.h</label>
        <link refid="vrt__string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vrt/vrt_types.h</label>
        <link refid="vrt__types_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="vrt__string_8h_1aa2b99569815d0971f22687df7392d3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_packet_type</definition>
        <argsstring>(vrt_packet_type packet_type)</argsstring>
        <name>vrt_string_packet_type</name>
        <param>
          <type>vrt_packet_type</type>
          <declname>packet_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of Packet type enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown packet type returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="19" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="19" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1af2eb78df73c725620b77e457f2bcfbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_tsm</definition>
        <argsstring>(vrt_tsm tsm)</argsstring>
        <name>vrt_string_tsm</name>
        <param>
          <type>vrt_tsm</type>
          <declname>tsm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of TSM (Timestamp mode) enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tsm</parametername>
</parameternamelist>
<parameterdescription>
<para>TSM.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown TSM returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="30" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="30" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1a3b3850641b61ac8c3a3809d628e6eb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_tsi</definition>
        <argsstring>(vrt_tsi tsi)</argsstring>
        <name>vrt_string_tsi</name>
        <param>
          <type>vrt_tsi</type>
          <declname>tsi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of TSI (Timestamp integer) enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tsi</parametername>
</parameternamelist>
<parameterdescription>
<para>TSI.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown TSI returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="41" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="41" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1ac3d84d0157b350448d87a68b8349ae6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_tsf</definition>
        <argsstring>(vrt_tsf tsf)</argsstring>
        <name>vrt_string_tsf</name>
        <param>
          <type>vrt_tsf</type>
          <declname>tsf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of TSF (Timestamp fractional) enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tsf</parametername>
</parameternamelist>
<parameterdescription>
<para>TSF.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown TSF returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="52" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="52" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1a99c9ae304a4b8d079cf2bd89eb8c3970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_agc_or_mgc</definition>
        <argsstring>(vrt_agc_or_mgc agc_or_mgc)</argsstring>
        <name>vrt_string_agc_or_mgc</name>
        <param>
          <type>vrt_agc_or_mgc</type>
          <declname>agc_or_mgc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of AGC/MGC enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agc_or_mgc</parametername>
</parameternamelist>
<parameterdescription>
<para>AGC/MGC.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown AGC/MGC returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="63" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="63" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1abd44330e5a4dbca145b5918fc29b7b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_packing_method</definition>
        <argsstring>(vrt_packing_method packing_method)</argsstring>
        <name>vrt_string_packing_method</name>
        <param>
          <type>vrt_packing_method</type>
          <declname>packing_method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of Packing method enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packing_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Packing method.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown Packing method returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="74" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="74" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1a3996420d201f8b5b94a380a72036576a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_real_or_complex</definition>
        <argsstring>(vrt_real_complex real_or_complex)</argsstring>
        <name>vrt_string_real_or_complex</name>
        <param>
          <type>vrt_real_complex</type>
          <declname>real_or_complex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of Real/Complex enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>real_or_complex</parametername>
</parameternamelist>
<parameterdescription>
<para>Real/Complex.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown Real/Complex returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="85" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="85" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1a69be6997674761912825d90bf058032a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_data_item_format</definition>
        <argsstring>(vrt_data_item_format data_item_format)</argsstring>
        <name>vrt_string_data_item_format</name>
        <param>
          <type>vrt_data_item_format</type>
          <declname>data_item_format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of Data item format enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_item_format</parametername>
</parameternamelist>
<parameterdescription>
<para>Data item format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown Data item format returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="96" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="96" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vrt__string_8h_1a781ac0482f2437dd9b76043f87350e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrt_string_error</definition>
        <argsstring>(int32_t error)</argsstring>
        <name>vrt_string_error</name>
        <param>
          <type>int32_t</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string representation of an error code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Error code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation.</para>
</simplesect>
<simplesect kind="note"><para>Inputting an unknown error code returns &quot;Unknown&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_string.h" line="107" column="12" declfile="/home/emil/libvrt/include/vrt/vrt_string.h" declline="107" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_VRT_VRT_STRING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_VRT_VRT_STRING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vrt/vrt_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_packet_type(vrt_packet_type<sp/>packet_type);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_tsm(vrt_tsm<sp/>tsm);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_tsi(vrt_tsi<sp/>tsi);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_tsf(vrt_tsf<sp/>tsf);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_agc_or_mgc(vrt_agc_or_mgc<sp/>agc_or_mgc);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_packing_method(vrt_packing_method<sp/>packing_method);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_real_or_complex(vrt_real_complex<sp/>real_or_complex);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_data_item_format(vrt_data_item_format<sp/>data_item_format);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vrt_string_error(int32_t<sp/>error);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/emil/libvrt/include/vrt/vrt_string.h"/>
  </compounddef>
</doxygen>
