<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structvrt__state__and__event__indicators" kind="struct" language="C++" prot="public">
    <compoundname>vrt_state_and_event_indicators</compoundname>
    <includes refid="vrt__types_8h" local="no">vrt_types.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1acfed696e002f6c89f0d3fd087ab4f4cb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::calibrated_time</definition>
        <argsstring></argsstring>
        <name>calibrated_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Calibrated time indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="281" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1a07dde15eeb1b654092f2699cee9f4d20" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::valid_data</definition>
        <argsstring></argsstring>
        <name>valid_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Valid data indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="282" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1a8e0182caf56a26245317b3527691d294" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::reference_lock</definition>
        <argsstring></argsstring>
        <name>reference_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Reference lock indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="283" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1ad830fa51919f9d928b67c17f76caab2b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::agc_or_mgc</definition>
        <argsstring></argsstring>
        <name>agc_or_mgc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the AGC/MGC indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="284" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1a0647c9cab57388040bd33c421415f5e6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::detected_signal</definition>
        <argsstring></argsstring>
        <name>detected_signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Detected signal indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="285" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1a231fdf4b1bb32f08474a97101f5b0b90" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::spectral_inversion</definition>
        <argsstring></argsstring>
        <name>spectral_inversion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Spectral inversion indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="286" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1ab8771cf0b8914fdfb13d8fd108a21011" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::over_range</definition>
        <argsstring></argsstring>
        <name>over_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Over-range indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="287" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvrt__state__and__event__indicators_1a9c6d241507171860a2608a0d7a27c7e7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrt_state_and_event_indicators::sample_loss</definition>
        <argsstring></argsstring>
        <name>sample_loss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if it has the Sample loss indicator field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="288" column="10" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Indicates presence of <ref refid="structvrt__state__and__event" kindref="compound">vrt_state_and_event</ref> fields. </para>
    </detaileddescription>
    <location file="/home/emil/libvrt/include/vrt/vrt_types.h" line="280" column="45" bodyfile="/home/emil/libvrt/include/vrt/vrt_types.h" bodystart="280" bodyend="290"/>
    <listofallmembers>
      <member refid="structvrt__state__and__event__indicators_1ad830fa51919f9d928b67c17f76caab2b" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>agc_or_mgc</name></member>
      <member refid="structvrt__state__and__event__indicators_1acfed696e002f6c89f0d3fd087ab4f4cb" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>calibrated_time</name></member>
      <member refid="structvrt__state__and__event__indicators_1a0647c9cab57388040bd33c421415f5e6" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>detected_signal</name></member>
      <member refid="structvrt__state__and__event__indicators_1ab8771cf0b8914fdfb13d8fd108a21011" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>over_range</name></member>
      <member refid="structvrt__state__and__event__indicators_1a8e0182caf56a26245317b3527691d294" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>reference_lock</name></member>
      <member refid="structvrt__state__and__event__indicators_1a9c6d241507171860a2608a0d7a27c7e7" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>sample_loss</name></member>
      <member refid="structvrt__state__and__event__indicators_1a231fdf4b1bb32f08474a97101f5b0b90" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>spectral_inversion</name></member>
      <member refid="structvrt__state__and__event__indicators_1a07dde15eeb1b654092f2699cee9f4d20" prot="public" virt="non-virtual"><scope>vrt_state_and_event_indicators</scope><name>valid_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
